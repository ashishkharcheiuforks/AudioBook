TODO: Write test scripts
TODO: Static analysis tools
TODO: Follow TDD Approach

TODO: Save current playing
TODO: resume last playing book feature
TODO: auto resume after call, interruption
TODO: local download/save book feature
TODO: playing book screen
TODO: navigation drawer for downloads, listen later and help, licenses and analytics feature.
TODO: pin/readList/listenList feature
TODO: Add total book hours to be played for each book in details screen
TODO:  Fragment UI state management
TODO: Android bluetooth device control listener
TODO:  When no network don't play the Audio in audio book details screen. show visual message for internet issue.Actively listen to net connection and let other knows when to call network operation.
TODO:  LibriVox API integration
                                      - fetch data via api call
                                      - parse result
                                      - compare the best match and  show the details in details screen.
                                      - save the results in DB for future reference.
                                      - don't call the LibriVox api if data is already present in the database.
                                      - use mediator livedata for RxJava for combining results.

TODO:  Download feature
              - Download chapter wise and book wise

TODO: Offline playing option for downloaded audio file.
                                      - Check whether file is downloaded or not.
                                      - If downloaded play local file
                                      - else online stream
TODO: Licenses and Attribution

TODO:  bug
TODO: notification and player button outoff sync in offline mode
TODO: Notification is not removing stuck
TODO: when process dealth occurs notification not clearing and exoplayer gives connection error
TODO: check what happended to audio player sevice when process death occured.

//TODO: Optional
TODO: libri Api (https://librivox.org/api/info)
TODO: alert to play book based on users daily commute time and activity.[Transition API]
TODO: Japanese language support, english
TODO: new book available alert[Service]
TODO: feature to support earphone button control
TODO: Analysis feature[hours played, books played, fav book, bookmark book,watch later list][Analytics]
TODO: save app data online [google drive apps folder and local]
TODO: Book Library management screen

                                - If offline direct to here.

                                - Show list of books downloaded

                                - Show list of book book marked and show visual sign if it is downloaded to make it concise.

                                - delete and redownload option

                                - Take example of Podcast subscribed screen for example.

                                - Master detail screen is good.



To generate a dependency graph run below commands
1. gradlew projectDependencyGraph
2. open file in \build\reports\dependency-graph from parent folder
3. Open URL (http://www.webgraphviz.com/) and past the data generated in dot file in step 2.
4. Download  and you are done.